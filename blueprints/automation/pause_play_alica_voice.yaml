blueprint:
  name: 📦Пауза и плей когда говорит или слушает колонка Алиса
  domain: automation
  description: Пауза и плей когда говорит или слушает колонка Алиса
  input:
    kolonka:
      name: Колонка
      description: Колонка
      selector:
        entity:
          domain: media_player
          integration: yandex_station
    dop_entity:
      name: Доп объект
      description: Дополнительный объект для паузы и возврата
      selector:
        entity:
    no_trigger1:
      name: Объект для исключения
      description: Не возвращать если ВКЛючен объект
      selector:
        entity:

max_exceeded: silent

trigger:
  - platform: state
    entity_id: !input dop_entity
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: !input kolonka
    attribute: alice_state
    from: IDLE
    to: LISTENING

condition: 
  - condition: state
    entity_id: !input kolonka
    state: playing
action:
  - service: media_player.media_pause
    data: {}
    target:
      entity_id: !input kolonka
  - if:
          - condition: or
            conditions:
              - condition: not
                conditions:
                  - condition: state
                    entity_id: !input kolonka
                    state: IDLE
                    attribute: alice_state
              - condition: state
                entity_id: !input dop_entity
                state: 'on'
    then:
      - wait_for_trigger:
              - platform: state
                attribute: alice_state
                to: IDLE
                entity_id: !input kolonka
                for:
                  hours: 0
                  minutes: 0
                  seconds: 2
              - platform: state
                to: 'off'
                entity_id: !input dop_entity
        continue_on_timeout: true
        timeout: '00:10:00'

  - condition: template
    value_template: '{{ wait.remaining > 1 }}'
  - condition: state
    entity_id: !input no_trigger1
    state: 'off'
  - service: media_player.media_play
    target:
          entity_id: !input kolonka
    data: {}
  - service: input_boolean.turn_off
    data: {}
    target:
          entity_id: !input dop_entity
# mode: parallel
# max: 10


mode: single




# trigger:
#   - platform: state
#     entity_id: !input dop_entity
#     from: 'off'
#     to: 'on'
#   - platform: state
#     entity_id: !input kolonka
#     attribute: alice_state
#     from: IDLE
#     to: LISTENING

# condition: 
#   - condition: state
#     entity_id: !input kolonka
#     state: playing
# action:
#   - service: media_player.media_pause
#     data: {}
#     target:
#       entity_id: !input kolonka
#   - if:
#     - condition: state
#       entity_id: !input kolonka
#       state: playing
#     then:
#       - if:
#           - condition: or
#             conditions:
#               - condition: not
#                 conditions:
#                   - condition: state
#                     entity_id: !input kolonka
#                     state: IDLE
#                     attribute: alice_state
#               - condition: state
#                 entity_id: !input dop_entity
#                 state: 'on'
#         then:
#           - wait_for_trigger:
#               - platform: state
#                 attribute: alice_state
#                 to: IDLE
#                 entity_id: !input kolonka
#                 for:
#                   hours: 0
#                   minutes: 0
#                   seconds: 1
#               - platform: state
#                 to: 'off'
#                 entity_id: !input dop_entity
#             continue_on_timeout: true
#             timeout: '00:10:00'

#       - condition: template
#         value_template: '{{ wait.remaining > 1 }}'
#       - condition: state
#         entity_id: !input no_trigger1
#         state: 'off'
#       - service: media_player.media_play
#         target:
#           entity_id: !input kolonka
#         data: {}
#     # else:
#     #   - service: input_boolean.turn_off
#     #     data: {}
#     #     target:
#     #       entity_id: !input dop_entity