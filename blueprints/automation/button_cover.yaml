blueprint:
  name: Закрытие или открытие штор по кнопке
  domain: automation
  input:
    in_trigger:
      name: Триггер
      selector:
        trigger:
    in_cover:
      name: Штора
      selector:
        entity:
          domain: cover
    in_wait_time:
      name: Время ожидания в секундах
      default: 60
      selector:
        number:
          min: 0
          max: 200
          mode: slider
    in_pos_close:
      name: Время ожидания в секундах
      default: 0
      selector:
        number:
          min: 0
          max: 100
          mode: slider
    in_pos_open:
      name: Время ожидания в секундах
      default: 100
      selector:
        number:
          min: 0
          max: 100
          mode: slider
mode: single
max_exceeded: silent
variables:
  in_cover: !input in_cover
  in_pos_close: !input in_pos_close
  in_pos_open: !input in_pos_open
trigger: !input in_trigger
condition: []
action:
  - repeat:
      sequence:
        - if:
            - condition: template
              value_template: "{{repeat.index == 2}}"
          then:
            - wait_for_trigger: !input in_trigger
              timeout:
                hours: 0
                minutes: 0
                seconds: !input in_wait_time
                milliseconds: 0
            - if:
                - condition: template
                  value_template: "{{wait.trigger.id is not defined}}"
              then:
                - stop: ""
        # - service: cover.{{repeat.item}}
        #   metadata: {}
        #   data: {}
        #   target:
        #     entity_id: !input in_cover

        - service: cover.set_cover_position
          metadata: {}
          data:
            position: "{{repeat.item}}"
          target:
            entity_id: !input in_cover



        - wait_for_trigger: !input in_trigger
          timeout:
            hours: 0
            minutes: 0
            seconds: !input in_wait_time
            milliseconds: 0
        - if:
            - condition: template
              value_template: "{{wait.trigger is defined}}"
          then:
            - service: cover.stop_cover
              metadata: {}
              data: {}
              target:
                entity_id: !input in_cover
          else:
            - stop: ""
      for_each: "{{[in_pos_open, in_pos_close]|sort(reverse=state_attr(in_cover, 'current_position')|int(100) < 50)}}"
