'''
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–º–µ–Ω—ã –º–µ–¥–∏–∞ –≤ telegram, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è PythonScriptsPro. –î–ª—è —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å token. 
–ü—Ä–∏–º–µ—Ä –≤—ã–∑–æ–≤–∞ —Å–∫—Ä–∏–ø—Ç–∞:

service: python_script.exec
data:
    file: /config/python_scripts/telegram_edit_media.py
    new_file: –ü—É—Ç—å –∏–ª–∏ —Å—Å—ã–ª–∫–∞ –∫ –Ω–æ–≤–æ–º—É —Ñ–∞–π–ª—É –¥–ª—è –∑–∞–º–µ–Ω—ã
    message_id: Message_id —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–º–µ–Ω–∏—Ç—å
    new_message: –¢–µ—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    chat_id: –°hat_id —á–∞—Ç–∞ –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–º–µ–Ω–∏—Ç—å
    keyboard: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥ —Ñ–∞–π–ª–æ–º, –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É HA
    button_id: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ, button_id —Å–æ–æ–±—â–µ–Ω–∏—è –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º –æ—Ç–≤–µ—Ç –≤ –≤–∏–¥–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É

'''
from telegram import ParseMode, InlineKeyboardButton, InlineKeyboardMarkup
import telegram
import requests
import io

token = "token" #–ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞

try:
        bot = telegram.Bot(token)
        chat_id = data["chat_id"]
        message_id = data["message_id"]
        new_file = data["new_file"]
        caption = data.get("new_message", None)
        button_id = data.get("button_id", False)
        inline_keyboard = data.get("inline_keyboard", False)

        if new_file.startswith("http"):
                req = requests.get(new_file)
                if not req.ok:
                        raise Exception(f'–û—à–∏–±–∫–∞! –ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª –ø–æ url: {new_file}')
                media = io.BytesIO(req.content)
        else:
                with open(new_file, 'rb') as f:
                        media = io.BytesIO(f.read())
        media.seek(0)

        size_file = media.getbuffer().nbytes / (1024*1024)
        if int(size_file) >= 50:
                raise Exception(f'–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 50–ú–±, —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: {round(size_file, 2)}–ú–±')

        if new_file.endswith('.mp4'): 
                media_out = telegram.InputMediaVideo(media, caption)
        elif new_file.endswith('.jpg') or new_file.endswith('.png') or new_file.endswith('.jpeg'):
                media_out = telegram.InputMediaPhoto(media, caption)
        elif new_file.endswith('.gif'):
                media_out = telegram.InputMediaAnimation(media, caption)
        else:
                raise Exception('–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ! –í–æ–∑–º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ mp4, jpg, png, jpeg, gif')

        reply_markup = None
        if inline_keyboard:
                inline_kb=[]
                inline_keyboard = inline_keyboard if isinstance(inline_keyboard, list) else [inline_keyboard]
                for row in inline_keyboard:
                        buttons = []
                        for key in row.split(","):
                                if ":/" in key:
                                        label = key.split(":/")[0]
                                        command = key[len(label) + 1 :]
                                        buttons.append(InlineKeyboardButton(label, callback_data=command))
                        inline_kb.append(buttons)
                reply_markup = InlineKeyboardMarkup(inline_kb)

        bot.editMessageMedia(chat_id=int(chat_id), 
                                message_id=message_id, 
                                reply_markup=reply_markup, 
                                media = media_out,
                                timeout=20000)
        script_message = "–£—Å–ø–µ—à–Ω–æ –∑–∞–º–µ–Ω–µ–Ω–æ –º–µ–¥–∏–∞ –≤ TG"
        script_status = "success"
except Exception as e:
        script_status = "error"
        script_message = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–º–µ–Ω–µ –º–µ–¥–∏–∞ –≤ TG –≤ —Å—Ç—Ä–æ–∫–µ {e.__traceback__.tb_lineno}: {type(e).__name__} {e}. –§–∞–π–ª: {new_file}"
        logger.error(script_message)

hass.services.call('logbook', 'log', {
                "name": "üì§Telegram –∑–∞–º–µ–Ω–∞ –º–µ–¥–∏–∞. ",
                "message": f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {script_message}",
                "entity_id": "script.telegram_edit_media"})

hass.bus.fire("py_script", {"script_name": "telegram_edit_media",
                        "script_status": script_status,
                        "script_message": script_message})

if (button_id):
        show_alert = False if script_status == "success" else True
        hass.services.call('telegram_bot', 'answer_callback_query', {
                        "callback_query_id": button_id,
                        "message": f"{script_message[:200]}",
                        "show_alert": show_alert })
